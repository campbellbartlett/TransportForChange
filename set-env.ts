require('dotenv').config();
const colors = require('colors');
const cheerio = require('cheerio');
const fs = require('fs');
const targetPath = './src/environments/';
const targetEnvFile = './src/environments/environment.ts';
const indexFileTemplate = './indexTemplate.html';
const indexFileOutput = './src/index.html';

const googleMapsAPIKey = process.env.GOOGLE_MAPS_API_KEY;
const googleMapsScriptSource = `https://maps.googleapis.com/maps/api/js?key=${googleMapsAPIKey}&libraries=places&language=en`;

const envConfigFile = `export const environment = {
   /* All environment properties in this file are automatically generated by npm run config
    *  see the file set-env.ts for more information
    */
   appName: '${process.env.APP_NAME}', /* process.env.APP_NAME */
   production: '${process.env.PRODUCTION}', /* process.env.PRODUCTION */
   tripGoAPIKey: '${process.env.TRIPGO_API_KEY}' /* process.env.TRIPGO_API_KEY */
};
`;

function fsSavedCallback(err: NodeJS.ErrnoException, successMessage) {
    if (err) {
        throw console.error(err);
    } else {
        console.log(colors.magenta(successMessage));
    }
}

function processHtmlTemplateFile(err: NodeJS.ErrnoException, data: string) {
    if (err) {
        throw console.error(err);
    } else {
        const $ = cheerio.load(data);
        const scriptSrc = $('#mapsAPI');
        scriptSrc.attr('src', googleMapsScriptSource);
        fs.writeFile(indexFileOutput, $.xml(), error => {
            fsSavedCallback(err, `Index.html created from template with GoogleMaps API Key`);
        });
    }
}

// These exists, mkdir and write are performed synchronously because they must be completed in this exact order.
if (!fs.existsSync(targetPath)) {
        console.log(colors.magenta(`The path ${targetPath} does not exist so it is being created`));
        fs.mkdirSync(targetPath);
}
console.log(colors.magenta('The file `environment.ts` will be written with the following content: \n'));
console.log(colors.grey(envConfigFile));
fs.writeFileSync(targetEnvFile, envConfigFile);

console.log(colors.magenta(`
The file 'index.html' will be created from the template ${indexFileTemplate} to include the GoogleMaps API Key`));

fs.readFile(indexFileTemplate, 'utf8',
    (err, data) => { processHtmlTemplateFile(err, data); });

